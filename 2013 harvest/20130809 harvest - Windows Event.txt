
*windows_event*

Windows 事件 小结

|CreateEvent()|： 创建事件；
|CloseHandle()|： 关闭事件；
|OpenEvent()|： 通过Name来获取事件的Handle；
|SetEvent()|,|PulseEvent()|： 使有信号；
|ResetEvent()|: 使无信号；
|WaitForSingleObject()|,|WaitForMultipleObjects()|: 等待事件变为有信号；

PulseEvent()详解： ~
    正如这个API的名字,它使一个Event对象的状态发生一次脉冲变化,从无信号变成有信号再变成无信号,
    而整个操作是原子的.对自动Event对象,它仅释放第一个等到该事件的thread(如果有),而对于手工
    Event对象,它释放所有等待的thread.

CreateEvent()详解：~
    HANDLE CreateEvent(
      LPSECURITY_ATTRIBUTES lpEventAttributes, // 安全属性. 一般为NULL
      BOOL bManualReset,                       // 事件类型. (复位方式) TRUE:手动事件 FALSE:自动事件
      BOOL bInitialState,                      // 初始状态. TRUE:有信号 FALSE:无信号
      LPCTSTR lpName                           // 对象名称. 一般为NULL
    )；
    事件类型(bManualReset) 解释: ~
        手动事件: 必须用ResetEvent()函数来手工将事件的状态复原到无信号状态.
        自动事件: 当事件被一个等待(WaitForXXXObject())线程释放以后, 系统将会自动将事件状态设置为无信号状态.
    对象名称(lpName) 注意:   ~
        如果创建的两个事件的的lpNanme相同,则这两个事件虽然Handle不同,但是两个其实是相同的事件.
        也就是说使用SetEvent()函数把其中一个事件设置成为有信号状态,另一个事件也同时也变成了有信号状态.



vim:tw=78:ts=8:ft=help:norl:
